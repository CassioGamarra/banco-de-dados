
/*View para busca*/
CREATE VIEW V_SHOW_TOTAL_CLIENTE (NOME, TOTAL)
AS
SELECT C.NOME, SUM(IV.TOTAL)
FROM ITENS_VENDA IV
INNER JOIN VENDA V ON IV.ID_VENDA = V.ID_VENDA
INNER JOIN CLIENTE C ON V.ID_CLIENTE = C.ID_CLIENTE
WHERE YEAR(V.DATA_VENDA) = 2020 AND V.FINALIZADA = 1
GROUP BY 1
ORDER BY 2 DESC;

SELECT * FROM V_SHOW_TOTAL_CLIENTE;
/*1*/
CREATE INDEX IDX_NOME_CLIENTE ON CLIENTE(NOME); #Cria o índice
DROP INDEX IDX_NOME_CLIENTE ON CLIENTE; #Dropa o índice


CREATE VIEW V_PRODUTOS_VENDIDOS (NOME, MARCA)
AS
SELECT P.NOME, M.NOME
FROM ITENS_VENDA IV
INNER JOIN VENDA V ON IV.ID_VENDA = V.ID_VENDA
INNER JOIN PRODUTO P ON IV.ID_PRODUTO = P.ID_PRODUTO
INNER JOIN MARCA M ON P.ID_MARCA = M.ID_MARCA
WHERE MONTH(V.DATA_VENDA) BETWEEN 6 AND 12;

SELECT * FROM V_PRODUTOS_VENDIDOS;
/*2*/
CREATE INDEX IDX_NOME_PRODUTO ON PRODUTO(NOME);
DROP INDEX IDX_NOME_PRODUTO ON PRODUTO;


CREATE VIEW V_DETALHES_VENDA(DATA_VENDA, NOTA_FISCAL, SUB_TOTAL, DESCONTO, TOTAL, CLIENTE)
AS
SELECT V.DATA_VENDA, V.NUMERO_NF, V.SUB_TOTAL, V.DESCONTO, V.TOTAL, C.NOME
FROM VENDA V
INNER JOIN CLIENTE C ON V.ID_CLIENTE = C.ID_CLIENTE
WHERE YEAR(V.DATA_VENDA) = 2020
ORDER BY 1;

SELECT * FROM V_DETALHES_VENDA;

/*3*/
CREATE INDEX IDX_DATA_VENDA ON VENDA(DATA_VENDA);
 
DROP INDEX IDX_DATA_VENDA ON VENDA;


DELIMITER //
CREATE PROCEDURE SP_CALC_TOTAL_VENDAS(IN SP_DT_INICIAL DATE, IN SP_DT_FINAL DATE)
BEGIN
    DECLARE MAIS_LINHAS INT DEFAULT 0;
    DECLARE PRODUTO VARCHAR(150);
    DECLARE TOTAL DECIMAL(15,2); 
	DECLARE TOTAL_VENDAS DECIMAL(15,2);
    DECLARE PERCENTUAL DECIMAL(15,2);
    DECLARE PERC_ACUMULADO DECIMAL (15,2) DEFAULT 0;
    DECLARE TOTAL_ACUMULADO DECIMAL (15,2) DEFAULT 0;

    DECLARE MSG VARCHAR(150);

    DECLARE CUR CURSOR FOR SELECT P.NOME, SUM(IV.TOTAL)
    FROM ITENS_VENDA IV
    INNER JOIN VENDA V ON IV.ID_VENDA = V.ID_VENDA
    INNER JOIN PRODUTO P ON IV.ID_PRODUTO = P.ID_PRODUTO
    WHERE V.DATA_VENDA BETWEEN SP_DT_INICIAL AND SP_DT_FINAL AND IV.TOTAL IS NOT NULL
    GROUP BY 1;

    DECLARE CONTINUE HANDLER FOR NOT FOUND SET MAIS_LINHAS = 1;
    SET MAIS_LINHAS = 0;

    DROP TEMPORARY TABLE IF EXISTS RESULTADO;
    CREATE TEMPORARY TABLE RESULTADO (
        PRODUTO VARCHAR(150),
        TOTAL DECIMAL(15,2),
        PERCENTUAL DECIMAL(15,2),
        PERC_ACUMULADO DECIMAL (15,2),
        TOTAL_ACUMULADO DECIMAL (15,2),
        TOTAL_VENDAS DECIMAL (15,2)
    );
	 
    SELECT SUM(IV.TOTAL) INTO TOTAL_VENDAS
    FROM ITENS_VENDA IV
    INNER JOIN VENDA V ON IV.ID_VENDA = V.ID_VENDA
    WHERE V.DATA_VENDA BETWEEN SP_DT_INICIAL AND SP_DT_FINAL AND IV.TOTAL IS NOT NULL;

    IF(TOTAL_VENDAS > 0) THEN
        OPEN CUR;
        LOOP_PROC: LOOP FETCH CUR INTO PRODUTO, TOTAL; 
            IF MAIS_LINHAS = 1 THEN
                LEAVE LOOP_PROC;
            END IF; 

            SET PERCENTUAL = ((TOTAL * 100)/TOTAL_VENDAS);
            SET PERC_ACUMULADO = PERC_ACUMULADO + PERCENTUAL;
            SET TOTAL_ACUMULADO = TOTAL_ACUMULADO + TOTAL;

            INSERT INTO RESULTADO (PRODUTO, TOTAL, PERCENTUAL, PERC_ACUMULADO, TOTAL_ACUMULADO, TOTAL_VENDAS)
            VALUES(PRODUTO, TOTAL, PERCENTUAL, PERC_ACUMULADO, TOTAL_ACUMULADO, TOTAL_VENDAS);  
        END LOOP LOOP_PROC;    
        CLOSE CUR;

        SELECT *
        FROM RESULTADO;
    
        DROP TEMPORARY TABLE RESULTADO;  
    ELSE
        SET MSG = 'Total inválido!';
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = MSG; 
    END IF; 
END;
// DELIMITER ;

CALL SP_CALC_TOTAL_VENDAS('2020-01-01','2020-12-31');

/*4*/
CREATE INDEX IDX_IV_TOTAL ON ITENS_VENDA(TOTAL);

DROP INDEX IDX_IV_TOTAL ON ITENS_VENDA;

DELIMITER //
CREATE PROCEDURE SP_CALC_COMPRAS_VENDAS(IN SP_ANO INT)
BEGIN
  DECLARE MAIS_LINHAS INT DEFAULT 0;
  DECLARE TOTAL_VENDAS DECIMAL(15,2);
  DECLARE TOTAL_COMPRAS DECIMAL(15,2);
  DECLARE NOME VARCHAR(100);
  DECLARE SUB_TOTAL DECIMAL(15,2);
  DECLARE DESCONTO DECIMAL(15,2);
  DECLARE TOTAL DECIMAL(15,2);
  DECLARE SALDO DECIMAL(15,2);

  DECLARE CURSOR_VENDAS CURSOR FOR SELECT C.NOME, SUM(V.SUB_TOTAL), (SUM(V.SUB_TOTAL)-SUM(V.TOTAL)) AS DESCONTO, SUM(V.TOTAL)
  FROM VENDA V
  INNER JOIN CLIENTE C ON C.ID_CLIENTE = V.ID_CLIENTE
  WHERE YEAR(V.DATA_VENDA) = SP_ANO AND V.TOTAL IS NOT NULL
  GROUP BY C.NOME
  ORDER BY V.SUB_TOTAL DESC;

  DECLARE CURSOR_COMPRAS CURSOR FOR SELECT F.RAZAO_SOCIAL, SUM(C.SUB_TOTAL), (SUM(C.SUB_TOTAL)-SUM(C.TOTAL)) AS DESCONTO, SUM(C.TOTAL)
  FROM COMPRA C
  INNER JOIN FORNECEDOR F ON F.ID_FORNEC = C.ID_FORNEC
  WHERE YEAR(C.DATA_COMPRA) = SP_ANO AND C.TOTAL IS NOT NULL
  GROUP BY F.RAZAO_SOCIAL
  ORDER BY C.SUB_TOTAL DESC;

  DECLARE CONTINUE HANDLER FOR NOT FOUND SET MAIS_LINHAS = 1;
  SET MAIS_LINHAS = 0;

  DROP TEMPORARY TABLE IF EXISTS RESULTADO;
  CREATE TEMPORARY TABLE RESULTADO (
    TP_OPERACAO VARCHAR(6),
    TP_NOME VARCHAR(100),
    TP_SUB_TOTAL DECIMAL(15,2),
    TP_DESCONTO DECIMAL(15,2),
    TP_TOTAL DECIMAL(15,2),
    TP_SALDO DECIMAL(15,2)
  );

  SELECT SUM(V.TOTAL) INTO TOTAL_VENDAS
  FROM VENDA V 
  WHERE YEAR(V.DATA_VENDA) = SP_ANO AND V.TOTAL IS NOT NULL;

  SELECT SUM(C.TOTAL) INTO TOTAL_COMPRAS
  FROM COMPRA C
  WHERE YEAR(C.DATA_COMPRA) = SP_ANO AND C.TOTAL IS NOT NULL;

  SET SALDO = TOTAL_VENDAS - TOTAL_COMPRAS;

  OPEN CURSOR_VENDAS;
  LOOP_VENDAS: LOOP FETCH CURSOR_VENDAS INTO NOME, SUB_TOTAL, DESCONTO, TOTAL;
    IF MAIS_LINHAS = 1 THEN
      LEAVE LOOP_VENDAS;
    END IF;

    INSERT INTO RESULTADO (TP_OPERACAO, TP_NOME, TP_SUB_TOTAL, TP_DESCONTO, TP_TOTAL, TP_SALDO)
    VALUES ('Venda', NOME, SUB_TOTAL, DESCONTO, TOTAL, SALDO);
  END LOOP LOOP_VENDAS;
  CLOSE CURSOR_VENDAS;

  SET MAIS_LINHAS = 0;

  OPEN CURSOR_COMPRAS;
  LOOP_COMPRAS: LOOP FETCH CURSOR_COMPRAS INTO NOME, SUB_TOTAL, DESCONTO, TOTAL;
    IF MAIS_LINHAS = 1 THEN
      LEAVE LOOP_COMPRAS;
    END IF;

    INSERT INTO RESULTADO (TP_OPERACAO, TP_NOME, TP_SUB_TOTAL, TP_DESCONTO, TP_TOTAL, TP_SALDO)
    VALUES ('Compra', NOME, SUB_TOTAL, DESCONTO, TOTAL, SALDO);
  END LOOP LOOP_COMPRAS;
  CLOSE CURSOR_COMPRAS;
  
  SELECT TP_OPERACAO AS 'Tipo Operação', TP_NOME AS 'Cliente/Fornecedor', TP_SUB_TOTAL AS 'Subtotal', TP_DESCONTO AS 'Desconto', TP_TOTAL AS 'Total', TP_SALDO AS 'Saldo' FROM RESULTADO;
  
  DROP TEMPORARY TABLE RESULTADO;
END;
// DELIMITER ;

CALL SP_CALC_COMPRAS_VENDAS(2020);

/*5*/
CREATE INDEX IDX_TOTAL_VENDA ON VENDA(TOTAL);
CREATE INDEX IDX_TOTAL_COMPRA ON COMPRA(TOTAL);
CREATE INDEX IDX_SUB_TOTAL_VENDA ON VENDA(SUB_TOTAL);
CREATE INDEX IDX_SUB_TOTAL_COMPRA ON COMPRA(SUB_TOTAL);

 
DROP INDEX IDX_TOTAL_VENDA ON VENDA;
DROP INDEX IDX_TOTAL_COMPRA ON COMPRA;
DROP INDEX IDX_SUB_TOTAL_VENDA ON VENDA;
DROP INDEX IDX_SUB_TOTAL_COMPRA ON COMPRA;