/*1 - Para atualizar o subtotal de uma venda ou compra toda vez que um item seja inserido, atualizado ou excluido*/

/*1 - VENDA*/
/*Após inserir em venda*/
DELIMITER // 
CREATE TRIGGER T_ATUALIZA_SUBTOTAL_VENDA_AI
AFTER INSERT ON ITENS_VENDA
FOR EACH ROW
BEGIN
	DECLARE SUBTOTAL DECIMAL(15,2);
	
	SELECT SUM(TOTAL) INTO SUBTOTAL
	FROM ITENS_VENDA IV
	WHERE IV.ID_VENDA  = NEW.ID_VENDA;
	
	UPDATE VENDA V
	SET V.SUB_TOTAL = SUBTOTAL,
		V.TOTAL = SUBTOTAL - (SUBTOTAL * V.DESCONTO)/100	
	WHERE V.ID_VENDA = NEW.ID_VENDA;
END;
//DELIMITER ;
/*Após atualizar venda*/
DELIMITER // 
CREATE TRIGGER T_ATUALIZA_SUBTOTAL_VENDA_AU
AFTER UPDATE ON ITENS_VENDA
FOR EACH ROW
BEGIN
	DECLARE SUBTOTAL DECIMAL(15,2);
	
	SELECT SUM(TOTAL) INTO SUBTOTAL
	FROM ITENS_VENDA IV
	WHERE IV.ID_VENDA  = NEW.ID_VENDA;
	
	UPDATE VENDA V
	SET V.SUB_TOTAL = SUBTOTAL,
		V.TOTAL = SUBTOTAL - (SUBTOTAL * V.DESCONTO)/100	
	WHERE V.ID_VENDA = NEW.ID_VENDA;
END;
//DELIMITER ;
/*Após excluir venda*/
DELIMITER // 
CREATE TRIGGER T_ATUALIZA_SUBTOTAL_VENDA_AD
AFTER DELETE ON ITENS_VENDA
FOR EACH ROW
BEGIN
	DECLARE SUBTOTAL DECIMAL(15,2);
	
	SELECT SUM(TOTAL) INTO SUBTOTAL
	FROM ITENS_VENDA IV
	WHERE IV.ID_VENDA  = OLD.ID_VENDA;
	
	UPDATE VENDA V
	SET V.SUB_TOTAL = SUBTOTAL,
		V.TOTAL = SUBTOTAL - (SUBTOTAL * V.DESCONTO)/100	
	WHERE V.ID_VENDA = OLD.ID_VENDA;
END;
//DELIMITER ;


/*1 - COMPRA*/

/*Trigger que deveria ser criado na atividade 4*/
DELIMITER //
CREATE TRIGGER T_ATRIB_VALOR_UNIT_COMPRA_BI
BEFORE INSERT ON ITENS_COMPRA
FOR EACH ROW
BEGIN
	SET NEW.TOTAL = NEW.VALOR_UNIT*NEW.QUANTIDADE;
END;
//DELIMITER ;

/*Trigger que deveria ser criado na atividade 4*/
DELIMITER //
CREATE TRIGGER T_ATRIB_VALOR_UNIT_COMPRA_BU
BEFORE UPDATE ON ITENS_COMPRA
FOR EACH ROW
BEGIN
	SET NEW.TOTAL = NEW.VALOR_UNIT*NEW.QUANTIDADE;
END;
//DELIMITER ;

/*Após inserir em compra*/
DELIMITER // 
CREATE TRIGGER T_ATUALIZA_SUBTOTAL_COMPRA_AI
AFTER INSERT ON ITENS_COMPRA
FOR EACH ROW
BEGIN
	DECLARE SUBTOTAL DECIMAL(15,2);
	
	SELECT SUM(TOTAL) INTO SUBTOTAL
	FROM ITENS_COMPRA IC
	WHERE IC.ID_COMPRA  = NEW.ID_COMPRA;
	
	UPDATE COMPRA C
	SET C.SUB_TOTAL = SUBTOTAL,
		C.TOTAL = SUBTOTAL - (SUBTOTAL * C.DESCONTO)/100	
	WHERE C.ID_COMPRA = NEW.ID_COMPRA;
END;
//DELIMITER ;

/*Após atualizar em compra*/
DELIMITER // 
CREATE TRIGGER T_ATUALIZA_SUBTOTAL_COMPRA_AU
AFTER UPDATE ON ITENS_COMPRA
FOR EACH ROW
BEGIN
	DECLARE SUBTOTAL DECIMAL(15,2);
	
	SELECT SUM(TOTAL) INTO SUBTOTAL
	FROM ITENS_COMPRA IC
	WHERE IC.ID_COMPRA  = NEW.ID_COMPRA;
	
	UPDATE COMPRA C
	SET C.SUB_TOTAL = SUBTOTAL,
		C.TOTAL = SUBTOTAL - (SUBTOTAL * C.DESCONTO)/100	
	WHERE C.ID_COMPRA = NEW.ID_COMPRA;
END;
//DELIMITER ;

/*Após excluir em venda*/
DELIMITER // 
CREATE TRIGGER T_ATUALIZA_SUBTOTAL_COMPRA_AD
AFTER DELETE ON ITENS_COMPRA
FOR EACH ROW
BEGIN
	DECLARE SUBTOTAL DECIMAL(15,2);
	
	SELECT SUM(TOTAL) INTO SUBTOTAL
	FROM ITENS_COMPRA IC
	WHERE IC.ID_COMPRA  = OLD.ID_COMPRA;
	
	UPDATE COMPRA C
	SET C.SUB_TOTAL = SUBTOTAL,
		C.TOTAL = SUBTOTAL - (SUBTOTAL * C.DESCONTO)/100	
	WHERE C.ID_COMPRA = OLD.ID_COMPRA;
END;
//DELIMITER ;

/*Crie os campos necessários (faltantes).*/
ALTER TABLE VENDA ADD COLUMN FINALIZADA BOOLEAN DEFAULT FALSE;
ALTER TABLE COMPRA ADD COLUMN FINALIZADA BOOLEAN DEFAULT FALSE;

/*Para atualizar o número de compras ou vendas sempre após finalizar as mesmas.*/
DELIMITER // 
CREATE TRIGGER T_FINALIZA_VENDA_AU
AFTER UPDATE ON VENDA
FOR EACH ROW
BEGIN
	DECLARE NUM_VENDAS INT;
	
    IF (NEW.FINALIZADA = TRUE) THEN
		SELECT COUNT(V.ID_VENDA) INTO NUM_VENDAS
        FROM VENDA V
        WHERE V.ID_CLIENTE = NEW.ID_CLIENTE AND FINALIZADA = TRUE;
        
		UPDATE CLIENTE C
        SET C.NUMERO_VENDAS = NUM_VENDAS
        WHERE C.ID_CLIENTE = NEW.ID_CLIENTE;
    END IF;
END;
//DELIMITER ;

DELIMITER // 
CREATE TRIGGER T_FINALIZA_COMPRA_AU
AFTER UPDATE ON COMPRA
FOR EACH ROW
BEGIN
	DECLARE NUM_COMPRAS INT;
	
    IF (NEW.FINALIZADA = TRUE) THEN
		SELECT COUNT(C.ID_COMPRA) INTO NUM_COMPRAS
        FROM COMPRA C
        WHERE C.ID_FORNEC = NEW.ID_FORNEC AND FINALIZADA = TRUE;
        
		UPDATE FORNECEDOR F
        SET F.NUMERO_COMPRAS = NUM_COMPRAS
        WHERE F.ID_FORNEC = NEW.ID_FORNEC;
    END IF;
END;
//DELIMITER ;

/*Verifica finalização de venda UPDATE*/
DELIMITER // 
CREATE TRIGGER T_CONSISTE_FINALIZA_VENDA_BU
BEFORE UPDATE ON VENDA
FOR EACH ROW
BEGIN
	DECLARE MSG VARCHAR(150);
	IF OLD.FINALIZADA THEN
		SET MSG = CONCAT ('A venda: NF', OLD.NUMERO_NF , ' já foi finalizada');
		SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = MSG;
	END IF;
END;
//DELIMITER ;

/*Verifica finalização de compra UPDATE*/
DELIMITER // 
CREATE TRIGGER T_CONSISTE_FINALIZA_COMPRA_BU
BEFORE UPDATE ON COMPRA
FOR EACH ROW
BEGIN
	DECLARE MSG VARCHAR(150);
	IF OLD.FINALIZADA THEN
		SET MSG = CONCAT ('A compra: NF', OLD.NUMERO_NF , ' já foi finalizada');
		SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = MSG;
	END IF;
END;
//DELIMITER ;

/*Verifica finalização de venda DELETE*/
DELIMITER // 
CREATE TRIGGER T_CONSISTE_FINALIZA_VENDA_BD
BEFORE DELETE ON VENDA
FOR EACH ROW
BEGIN
	DECLARE MSG VARCHAR(150);
	IF OLD.FINALIZADA THEN
		SET MSG = CONCAT ('A venda: NF', OLD.NUMERO_NF , ' já foi finalizada, não é possível excluir');
		SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = MSG;
	END IF;
END;
//DELIMITER ;

/*Verifica finalização de compra DELETE*/
DELIMITER // 
CREATE TRIGGER T_CONSISTE_FINALIZA_COMPRA_BD
BEFORE DELETE ON COMPRA
FOR EACH ROW
BEGIN
	DECLARE MSG VARCHAR(150);
	IF OLD.FINALIZADA THEN
		SET MSG = CONCAT ('A compra: NF', OLD.NUMERO_NF , ' já foi finalizada, não é possível excluir');
		SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = MSG;
	END IF;
END;
//DELIMITER ;

/*Atualiza o estoque após venda ou compra*/
DELIMITER // 
CREATE TRIGGER T_ATUALIZA_ESTOQUE_VENDA_AU
AFTER UPDATE ON VENDA
FOR EACH ROW
BEGIN
	IF NEW.FINALIZADA THEN
		UPDATE PRODUTO P SET P.QUANT_ATUAL = P.QUANT_ATUAL - (
			SELECT IV.QUANTIDADE
			FROM ITENS_VENDA IV
			WHERE IV.ID_VENDA = NEW.ID_VENDA AND IV.ID_PRODUTO = P.ID_PRODUTO
		) WHERE P.ID_PRODUTO = (SELECT IV.ID_PRODUTO FROM ITENS_VENDA IV WHERE IV.ID_VENDA = NEW.ID_VENDA AND IV.ID_PRODUTO = P.ID_PRODUTO);
	END IF;
END;
//DELIMITER ;